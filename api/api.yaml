openapi: 3.0.1  
info:
  version: 1.0.0
  title: Hacker News
  description: "This is the Open API documentation for the REST API of our beloved application **Hacker News** deployed at <https://hacker-news-fib.herokuapp.com/>. <br>All operations are executable. Only one operation requires authentication: `deleteTweet`. In this case, you must **Authorize** your request by providing the api_key vaule you got when you created the tweet."
servers:
  - url: 'https://hacker-news-fib.herokuapp.com/'
paths:
  ###GET /COMMENTS/:ID
  /comments/:id:
    get:
      tags:
      - comments
      summary: Finds Comment by its Id
      description: Return the Comment
      operationId: getCommentById
      parameters:
      - name: commentId
        in: path
        description: ID of Comment to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404Comment'
  ###GET /REPLIES/:ID
  /replies/:id:
    get:
      tags:
      - replies
      summary: Finds Reply by its Id
      description: Return the Reply
      operationId: getReplyById
      parameters:
      - name: replyId
        in: path
        description: ID of Reply to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404Reply'
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        text:
          type: string
          minLength: 4
          example: 'Text'
        votes:
          type: integer
          format: int64
          example: 3
        userId:
          type: integer
          format: int64
          example: 4
        postId:
          type: integer
          format: int64
          example: 5
        created_at:
          type: string
          format: date-time
    Reply:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        text:
          type: string
          minLength: 4
          example: 'Text Reply'
        votes:
          type: integer
          format: int64
          example: 3
        userId:
          type: integer
          format: int64
          example: 4
        parentId:
          type: integer
          format: int64
          example: 5
        parentType:
          type: string
          minLength: 4
          example: 'Comment'
        created_at:
          type: string
          format: date-time
    ErrorResult:
      type: object
      properties:
        status:
          type: integer
          enum: [400, 401, 403, 404, 409]
        error: 
          type: string
          enum: ["Bad Request", "Unauthorized", "Forbidden", "Not Found", "Conflict"]
        message: 
          type: string
  examples:
    error400:
      value:
        status: 400
        error: "Bad Request"
        message: "Content is too long (maximum is 280 characters)"
    error401:
      value:
        status: 401
        error: "Unauthorized"
        message: "You provided no api key (X-API-KEY Header)"
    error403:
      value:
        status: 403
        error: "Forbidden"
        message: "Your api key (X-API-KEY Header) is not valid"
    error404Comment:
      value:
        status: 404
        error: "Not Found"
        message: "No Comment with that ID"
    error404Reply:
      value:
        status: 404
        error: "Not Found"
        message: "No Reply with that ID"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY #Custom headers in rails apps must have the X- prefix
      in: header